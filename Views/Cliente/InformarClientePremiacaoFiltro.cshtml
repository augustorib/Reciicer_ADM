@model Reciicer.Models.ClienteViewModels.ClienteNivelPremiacaoViewModel
@{
    ViewData["Title"] = "Informar Cliente Premiação";
    var mensagem = TempData["Mensagem"] as string;
}

@functions{
    public string ColorirNivel(int id)
    {
        switch(id)
        {
            case 1:
                return "bg-secondary";
            case 2:
                return "bg-info";
            case 3:
                return "bg-warning ";
            case 4:
                return "bg-success ";
            case 5:
                 return "bg-primary ";
            case 6:
                 return "bg-danger ";
            default:
                return "none";   
        }
    }
}

<h1>@ViewData["Title"]</h1>

@if (!string.IsNullOrEmpty(mensagem))
{
   
    @if(mensagem[0] == 'F')
    {
        <div class="alert alert-danger" id="email-alert" role="alert">
          <i class="fa-solid fa-circle-xmark"></i> @mensagem
        </div>
    }
    else
    {
        <div class="alert alert-success" id="email-alert" role="alert">
            <i class="fa-solid fa-check"></i> @mensagem
        </div>
    }
}


<form action="InformarClientePremiacaoFiltro" method="get">
    <div class="my-4 row">
            <div class="col-md-5">
                <label asp-for="NivelId" class="form-label">Escolha um Nível: </label>
                <select asp-for="NivelId" asp-items="@(new SelectList(Model.Niveis, "Id", "Descricao", "@Model.NivelId"))" class="form-select form-select-md">
                    <option value=""selected>Selecione um Nível</option>
                </select>
            </div>
            
            <div class="col-md-2 align-self-end">
                <button type="submit" class="btn btn-primary">OK</button>
            </div> 
    </div>
</form>

<div>
    <table class="table table-striped text-center" id="dataTableInit">
        <thead>
            <tr>
                    <th>@Html.DisplayNameFor(model => model.Cliente.Nome)</th>
                    <th>@Html.DisplayNameFor(model => model.Cliente.Email)</th>
                    <th>@Html.DisplayNameFor(model => model.Cliente.Nivel.Descricao)</th>
                    <th>@Html.DisplayNameFor(model => model.Cliente.Nivel.Premiacao.Descricao)</th>
                    <th>Ações</th>
            </tr>
        </thead>
        <tbody>

    @foreach (var item in Model.Clientes) 
    {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td class="@ColorirNivel(item.Nivel.Id)">@Html.DisplayFor(modelItem => item.Nivel.Descricao)</td>
                <td>@Html.DisplayFor(modelItem => item.Nivel.Premiacao.Descricao)</td>

        
                <td>
                    <form asp-action="EnviarEmailClientePremiacao" method="post">
                        <button type="submit" class="btn btn-primary">
                            <input type="hidden" name="email" value="@item.Email">
                            <i class="fa-regular fa-envelope"></i>
                        </button>
                        <input type="hidden" name="nivelId" value="@item.NivelId">
                    </form>
                </td> 
            </tr>
        }
        </tbody>
    </table>
</div>

@section Scripts{
    
    <script>
        $(document).ready(function(){
            
            setTimeout(function() {
                $('#email-alert').fadeOut('slow');
            }, 3000);
        });
    </script>

}